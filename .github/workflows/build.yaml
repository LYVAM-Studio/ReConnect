name: Build game (clients and server)

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    name: Build for ${{ matrix.name }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: MacOs
            targetPlatform: StandaloneOSX
            buildName: ReConnect-Client-MacOS
            outputPath: build/ReConnect-Client-MacOS
            customParameters: ""
          - name: Windows
            targetPlatform: StandaloneWindows64
            buildName: ReConnect-Client-Windows
            outputPath: build/ReConnect-Client-Windows
            customParameters: ""
          - name: Linux
            targetPlatform: StandaloneLinux64
            buildName: ReConnect-Client-Linux
            outputPath: build/ReConnect-Client-Linux
            customParameters: ""
          - name: Linux Server
            targetPlatform: StandaloneLinux64
            buildName: ReConnect-Server-Linux
            outputPath: build/ReConnect-Server-Linux
            customParameters: -standaloneBuildSubtarget Server

    env:
      UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - name: Cache the libraries
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.name }}-${{ hashFiles('Packages/manifest.json', 'Packages/packages-lock.json', 'ProjectSettings/ProjectSettings.asset') }}
          restore-keys: |
            Library-${{ matrix.name }}-
            Library-
      - name: Build the Unity project
        uses: game-ci/unity-builder@v4
        with:
          buildName: ${{ matrix.buildName }}
          targetPlatform: ${{ matrix.targetPlatform }}
          buildsPath: ${{ matrix.outputPath }}
          customParameters: ${{ matrix.customParameters }}
      - name: Compress build artifacts
        run: |
          cd ${{ matrix.outputPath }}
          zip -r ../../${{ matrix.buildName }}.zip .
          cd -
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.buildName }}
          path: ${{ matrix.buildName }}.zip
